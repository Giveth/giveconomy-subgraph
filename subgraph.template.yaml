specVersion: 0.0.2
description: Giveth Subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: GIVPower
    network: '{{network}}'
    source:
      address: '{{GIVPower.address}}'
      abi: GIVPower
      startBlock: {{ GIVPower.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      abis:
        - name: GIVPower
          file: ./abis/GIVPower.json
      entities:
        - User
        - TokenLock
      eventHandlers:
        - event: TokenLocked(indexed address,uint256,uint256,uint256)
          handler: handleTokenLocked
        - event: TokenUnlocked(indexed address,uint256,uint256)
          handler: handleTokenUnlocked
        - event: Upgraded(indexed address)
          handler: handleUpgrade
      file: ./src/mappings/givPower.ts

{{#each TokenDistro}}
  - kind: ethereum/contract
    name: 'TokenDistro'
    network: '{{../network}}'
    source:
      address: '{{address}}'
      abi: TokenDistro
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      abis:
        - name: TokenDistro
          file: ./abis/TokenDistro.json
      entities:
        - TokenAllocation
        - TransactionTokenAllocation
      eventHandlers:
        - event: Allocate(indexed address,indexed address,uint256)
          handler: handleAllocate
        # - event: Assign(indexed address,indexed address,uint256)
        #   handler: handleAssign
        # - event: ChangeAddress(indexed address,indexed address)
        #   handler: handleChangeAddress
        # - event: Claim(indexed address,uint256)
        #   handler: handleClaim
        # - event: GivBackPaid(address)
        #   handler: handleGivBackPaid
        # - event: RoleAdminChanged(indexed bytes32,indexed bytes32,indexed bytes32)
        #   handler: handleRoleAdminChanged
        # - event: RoleGranted(indexed bytes32,indexed address,indexed address)
        #   handler: handleRoleGranted
        # - event: RoleRevoked(indexed bytes32,indexed address,indexed address)
        #   handler: handleRoleRevoked
        # - event: StartTimeChanged(uint256,uint256)
        #   handler: handleStartTimeChanged
      file: ./src/mappings/tokenDistro.ts
{{/each}}

{{#each ERC20}}
  - kind: ethereum/contract
    name: '{{name}}'
    network: '{{../network}}'
    source:
      address: '{{address}}'
      abi: ERC20
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
      entities:
        - TokenBalance
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
      file: ./src/mappings/ERC20.ts

{{/each}}

{{#each Unipool}}
  - kind: ethereum/contract
    name: '{{name}}'
    network: '{{../network}}'
    source:
      address: '{{address}}'
      abi: UnipoolTokenDistributor
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      abis:
        - name: UnipoolTokenDistributor
          file: ./abis/UnipoolTokenDistributor.json
      entities:
        - Unipool
        - UnipoolBalance
      eventHandlers:
        - event: RewardPaid(indexed address,uint256)
          handler: handleRewardPaid
        - event: Staked(indexed address,uint256)
          handler: handleStaked
        - event: Withdrawn(indexed address,uint256)
          handler: handleWithdrawn
        - event: RewardAdded(uint256)
          handler: handleRewardAdded
      file: ./src/mappings/unipool.ts
{{/each}}
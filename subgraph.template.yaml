specVersion: 0.0.2
description: Giveth Subgraph
schema:
  file: ./schema.graphql
dataSources:
{{#if (isdefined GIVPower)}}
  - kind: ethereum/contract
    name: GIVPower
    network: '{{network}}'
    source:
      address: '{{GIVPower.address}}'
      abi: GIVPower
      startBlock: {{ GIVPower.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      abis:
        - name: GIVPower
          file: ./abis/GIVPower.json
      entities:
        - User
        - TokenLock
      eventHandlers:
        - event: TokenLocked(indexed address,uint256,uint256,uint256)
          handler: handleTokenLocked
        - event: TokenUnlocked(indexed address,uint256,uint256)
          handler: handleTokenUnlocked
        - event: Upgraded(indexed address)
          handler: handleUpgrade
      file: ./src/mappings/givPower.ts
{{/if}}

{{#if (isdefined MerkleDistro)}}
  - kind: ethereum/contract
    name: MerkleDistro
    network: '{{network}}'
    source:
      address: '{{MerkleDistro.address}}'
      abi: MerkleDistro
      startBlock: {{ MerkleDistro.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      abis:
        - name: MerkleDistro
          file: ./abis/MerkleDistro.json
      entities:
        - Claimed
        - OwnershipTransferred
      eventHandlers:
        - event: Claimed(uint256,address,address,uint256)
          handler: handleClaimed
        # - event: OwnershipTransferred(indexed address,indexed address)
        #   handler: handleOwnershipTransferred
      file: ./src/mappings/merkleDistro.ts
{{/if}}

{{#if (isdefined UniswapV3.Pool)}}
  - kind: ethereum/contract
    name: UniswapV3Pool
    network: '{{network}}'
    source:
      address: '{{UniswapV3.Pool.address}}'
      abi: UniswapV3Pool
      startBlock: {{ UniswapV3.Pool.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Initialize
        - Swap
      abis:
        - name: UniswapV3Pool
          file: ./abis/UniswapV3Pool.json
        - name: UniswapV3Staker
          file: ./abis/UniswapV3Staker.json
      eventHandlers:
        # We don't need this event handler, but data source should have at least one event handler
        - event: Initialize(uint160,int24)
          handler: handleInitialize
        - event: Swap(indexed address,indexed address,int256,int256,uint160,uint128,int24)
          handler: handleSwap
      file: ./src/mappings/uniswapV3/uniswapV3PoolMapping.ts
{{/if}}

{{#if (isdefined UniswapV3.PositionsNft)}}
  - kind: ethereum/contract
    name: UniswapV3PositionsNFT
    network: '{{network}}'
    source:
      address: '{{UniswapV3.PositionsNft.address}}'
      abi: UniswapV3PositionsNFT
      startBlock: {{ UniswapV3.PositionsNft.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - IncreaseLiquidity
        - DecreaseLiquidity
        - Transfer
      abis:
        - name: UniswapV3PositionsNFT
          file: ./abis/uniswapV3PositionsNFT.json
        - name: UniswapV3Staker
          file: ./abis/UniswapV3Staker.json
        - name: UniswapV3Pool
          file: ./abis/UniswapV3Pool.json
      eventHandlers:
        - event: IncreaseLiquidity(indexed uint256,uint128,uint256,uint256)
          handler: handleIncreaseLiquidity
        - event: DecreaseLiquidity(indexed uint256,uint128,uint256,uint256)
          handler: handleDecreaseLiquidity
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
      file: ./src/mappings/uniswapV3/uniswapV3PositionsNftMapping.ts
{{/if}}

{{#if (isdefined UniswapV3.Staker)}}
  - kind: ethereum/contract
    name: UniswapV3Staker
    network: '{{network}}'
    source:
      address: '{{UniswapV3.Staker.address}}'
      abi: UniswapV3Staker
      startBlock: {{ UniswapV3.Staker.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - TokenStaked
        - TokenUnstaked
      abis:
        - name: UniswapV3Staker
          file: ./abis/UniswapV3Staker.json
      eventHandlers:
        - event: TokenStaked(indexed uint256,indexed bytes32,uint128)
          handler: handleTokenStaked
        - event: TokenUnstaked(indexed uint256,indexed bytes32)
          handler: handleTokenUnstaked
      file: ./src/mappings/uniswapV3/uniswapV3TokenStakerMapping.ts

   {{/if}}

{{#if (isdefined UniswapV3.RewardToken)}}
  - kind: ethereum/contract
    name: UniswapV3RewardToken
    network: '{{network}}'
    source:
      address: '{{UniswapV3.RewardToken.address}}'
      abi: UniswapV3RewardToken
      startBlock: {{ UniswapV3.RewardToken.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Approval
        - OwnershipTransferred
        - RewardPaid
        - Transfer
      abis:
        - name: UniswapV3RewardToken
          file: ./abis/UniswapV3RewardToken.json
      eventHandlers:
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleApproval
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        - event: RewardPaid(indexed address,uint256)
          handler: handleRewardPaid
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
      file: ./src/mappings/uniswapV3/uniswapV3RewardTokenMapping.ts
   {{/if}}

{{#each TokenDistro}}
  - kind: ethereum/contract
    name: '{{name}}'
    network: '{{../network}}'
    source:
      address: '{{address}}'
      abi: TokenDistro
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      abis:
        - name: TokenDistro
          file: ./abis/TokenDistro.json
      entities:
        - TokenDistroBalance
        - TokenAllocation
        - TransactionTokenAllocation
        - TokenDistroContractInfo
      eventHandlers:
        - event: Allocate(indexed address,indexed address,uint256)
          handler: handleAllocate
        - event: Assign(indexed address,indexed address,uint256)
          handler: handleAssign
        - event: ChangeAddress(indexed address,indexed address)
          handler: handleChangeAddress
        - event: Claim(indexed address,uint256)
          handler: handleClaim
        - event: GivBackPaid(address)
          handler: handleGivBackPaid
        # - event: RoleAdminChanged(indexed bytes32,indexed bytes32,indexed bytes32)
        #   handler: handleRoleAdminChanged
        # - event: RoleGranted(indexed bytes32,indexed address,indexed address)
        #   handler: handleRoleGranted
        # - event: RoleRevoked(indexed bytes32,indexed address,indexed address)
        #   handler: handleRoleRevoked
        - event: StartTimeChanged(uint256,uint256)
          handler: handleStartTimeChanged
        - event: DurationChanged(uint256)
          handler: handleDurationChanged

      file: ./src/mappings/tokenDistro.ts
{{/each}}

{{#each ERC20}}
  - kind: ethereum/contract
    name: '{{name}}'
    network: '{{../network}}'
    source:
      address: '{{address}}'
      abi: ERC20
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
      entities:
        - TokenBalance
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
      file: ./src/mappings/ERC20.ts

{{/each}}

{{#each Unipool}}
  - kind: ethereum/contract
    name: '{{name}}'
    network: '{{../network}}'
    source:
      address: '{{address}}'
      abi: UnipoolTokenDistributor
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      abis:
        - name: UnipoolTokenDistributor
          file: ./abis/UnipoolTokenDistributor.json
      entities:
        - Unipool
        - UnipoolBalance
      eventHandlers:
        - event: RewardPaid(indexed address,uint256)
          handler: handleRewardPaid
        - event: Staked(indexed address,uint256)
          handler: handleStaked
        - event: Withdrawn(indexed address,uint256)
          handler: handleWithdrawn
        - event: RewardAdded(uint256)
          handler: handleRewardAdded

      file: ./src/mappings/unipool.ts
{{/each}}

{{#if (isdefined GiversPFP)}}

  - kind: ethereum/contract
    name: GiversPFP
    network: '{{network}}'
    source:
      address: '{{GiversPFP.address}}'
      abi: GiversPFP
      startBlock: {{ GiversPFP.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      abis:
        - name: GiversPFP
          file: ./abis/GiversPFP.json
      entities:
        - Transfer
      eventHandlers:
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
      file: ./src/mappings/giversPFP.ts

  {{/if}}
